//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("helperModel", "helps_TypeHelp", "helpType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Helper.helpType), "helps", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Helper.helps), true)]

#endregion

namespace Helper
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<helps> helps
        {
            get
            {
                if ((_helps == null))
                {
                    _helps = base.CreateObjectSet<helps>("helps");
                }
                return _helps;
            }
        }
        private ObjectSet<helps> _helps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<helpType> helpType
        {
            get
            {
                if ((_helpType == null))
                {
                    _helpType = base.CreateObjectSet<helpType>("helpType");
                }
                return _helpType;
            }
        }
        private ObjectSet<helpType> _helpType;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the helps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTohelps(helps helps)
        {
            base.AddObject("helps", helps);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the helpType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTohelpType(helpType helpType)
        {
            base.AddObject("helpType", helpType);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="helperModel", Name="helps")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class helps : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new helps object.
        /// </summary>
        /// <param name="id_help">Initial value of the id_help property.</param>
        /// <param name="id_Type">Initial value of the id_Type property.</param>
        public static helps Createhelps(global::System.Int32 id_help, global::System.Int32 id_Type)
        {
            helps helps = new helps();
            helps.id_help = id_help;
            helps.id_Type = id_Type;
            return helps;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id_help
        {
            get
            {
                return _id_help;
            }
            set
            {
                if (_id_help != value)
                {
                    Onid_helpChanging(value);
                    ReportPropertyChanging("id_help");
                    _id_help = StructuralObject.SetValidValue(value, "id_help");
                    ReportPropertyChanged("id_help");
                    Onid_helpChanged();
                }
            }
        }
        private global::System.Int32 _id_help;
        partial void Onid_helpChanging(global::System.Int32 value);
        partial void Onid_helpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String helpText
        {
            get
            {
                return _helpText;
            }
            set
            {
                OnhelpTextChanging(value);
                ReportPropertyChanging("helpText");
                _helpText = StructuralObject.SetValidValue(value, true, "helpText");
                ReportPropertyChanged("helpText");
                OnhelpTextChanged();
            }
        }
        private global::System.String _helpText;
        partial void OnhelpTextChanging(global::System.String value);
        partial void OnhelpTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id_Type
        {
            get
            {
                return _id_Type;
            }
            set
            {
                Onid_TypeChanging(value);
                ReportPropertyChanging("id_Type");
                _id_Type = StructuralObject.SetValidValue(value, "id_Type");
                ReportPropertyChanged("id_Type");
                Onid_TypeChanged();
            }
        }
        private global::System.Int32 _id_Type;
        partial void Onid_TypeChanging(global::System.Int32 value);
        partial void Onid_TypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> dateAdd
        {
            get
            {
                return _dateAdd;
            }
            set
            {
                OndateAddChanging(value);
                ReportPropertyChanging("dateAdd");
                _dateAdd = StructuralObject.SetValidValue(value, "dateAdd");
                ReportPropertyChanged("dateAdd");
                OndateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _dateAdd;
        partial void OndateAddChanging(Nullable<global::System.DateTime> value);
        partial void OndateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String headerHelp
        {
            get
            {
                return _headerHelp;
            }
            set
            {
                OnheaderHelpChanging(value);
                ReportPropertyChanging("headerHelp");
                _headerHelp = StructuralObject.SetValidValue(value, true, "headerHelp");
                ReportPropertyChanged("headerHelp");
                OnheaderHelpChanged();
            }
        }
        private global::System.String _headerHelp;
        partial void OnheaderHelpChanging(global::System.String value);
        partial void OnheaderHelpChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("helperModel", "helps_TypeHelp", "helpType")]
        public helpType helpType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<helpType>("helperModel.helps_TypeHelp", "helpType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<helpType>("helperModel.helps_TypeHelp", "helpType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<helpType> helpTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<helpType>("helperModel.helps_TypeHelp", "helpType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<helpType>("helperModel.helps_TypeHelp", "helpType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="helperModel", Name="helpType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class helpType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new helpType object.
        /// </summary>
        /// <param name="id_HelpType">Initial value of the id_HelpType property.</param>
        public static helpType CreatehelpType(global::System.Int32 id_HelpType)
        {
            helpType helpType = new helpType();
            helpType.id_HelpType = id_HelpType;
            return helpType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id_HelpType
        {
            get
            {
                return _id_HelpType;
            }
            set
            {
                if (_id_HelpType != value)
                {
                    Onid_HelpTypeChanging(value);
                    ReportPropertyChanging("id_HelpType");
                    _id_HelpType = StructuralObject.SetValidValue(value, "id_HelpType");
                    ReportPropertyChanged("id_HelpType");
                    Onid_HelpTypeChanged();
                }
            }
        }
        private global::System.Int32 _id_HelpType;
        partial void Onid_HelpTypeChanging(global::System.Int32 value);
        partial void Onid_HelpTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name_TypeHelp
        {
            get
            {
                return _name_TypeHelp;
            }
            set
            {
                Onname_TypeHelpChanging(value);
                ReportPropertyChanging("name_TypeHelp");
                _name_TypeHelp = StructuralObject.SetValidValue(value, true, "name_TypeHelp");
                ReportPropertyChanged("name_TypeHelp");
                Onname_TypeHelpChanged();
            }
        }
        private global::System.String _name_TypeHelp;
        partial void Onname_TypeHelpChanging(global::System.String value);
        partial void Onname_TypeHelpChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("helperModel", "helps_TypeHelp", "helps")]
        public EntityCollection<helps> helps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<helps>("helperModel.helps_TypeHelp", "helps");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<helps>("helperModel.helps_TypeHelp", "helps", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
